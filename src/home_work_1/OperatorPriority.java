package home_work_1;

public class OperatorPriority {
    public static void main(String[] args) {
        int x = 2, y = 8;
        // При устном расчете результат получился 5.25, но тип int отрезает дробную часть, поэтому в программе результат равен 5.
        // Решить эту проблему можно приведя x или y к типу double и переменную result1 объявить как double
        int result1 = 5 + x / y ;
        // В п.п 2.2, 2.3 результат вышел 0,875, но как и в примере выше int обрезает дробную часть, поэтому результат в этих примерах 0.
        // Решить проблему можно как и в первом примере.
        int result2 = (5 + x) / y ;
        // Во всех следующих примерах использование x++ бессмысленно, т.к. после инкрементации в примерах переменная далее не используется.
        int result3 = (5 + x++) / y;
        x = 2;
        // В данном примере ответ программы совпал с устным решением и равен 1, т.к. декремент --y является преунарным оператором,
        // имеет наивысший приоритет и отработал до деления
        int result4 = (5 + x++) / --y;
        x = 2;
        y = 8;
        // При устном решении примера ответ получился 0,286, но int обрезает дробную часть, поэтому результат выполнения программы равен 0.
        // Решить проблему можно приведя --y или (5 * x >> x++), а так же переменную result к типу double
        int result5 = (5 * x >> x++) / --y;
        x = 2;
        y = 8;
        // При устном решении примера ответ получился 1,57, но int обрезает дробную часть, поэтому результат выполнения программы равен 1.
        // Решить проблему можно приведя --y или (22 * x >> x++), а так же 68 и переменную result6 к типу double
        int result6 = (5 + 7 > 20 ? 68 : 22 * x >> x++) / --y;
        x = 2;
        // Следующий пример выдаст ошибку компиляции, т.к. варианты ответов тернарного оператора имеют разный тип данных, и если бы решение в нем
        // попало бы на 68 >=68, то это тип boolean, и невозможно было бы разделить его на --у. Устно вышел ответ 1.57
        //int result7 = (5 + 7 > 20 ? 68 >= 68 : 22 * x >> x++) / --y;
        // в последних двух примерах результат устных расчетов совпал с выполнением программы - false
        boolean result8 = 6 - x > 3 && 12 * 12 <= 119;
        boolean result9 = true && false;
        System.out.println("5 + 2 / 8 = " + result1);
        System.out.println("(5 + 2) / 8 = " + result2);
        System.out.println("(5 + 2++) / 8 = " + result3);
        System.out.println("(5 + 2++) / --8 = " + result4);
        System.out.println("(5 * 2 >> 2++) / --8 = " + result5);
        System.out.println("(5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8 = " + result6);
        System.out.println("6 - 2 > 3 && 12 * 12 <= 119 = " + result8);
        System.out.println("true && false = " + result9);
    }
}
